{"version":3,"sources":["questions/QueAns.tsx","questions/CorrectAns.tsx","questions/StoryQuestions.tsx","contents/ContentList.tsx","tags/TagList.tsx","stories/StoryCategoryList.tsx","stories/StoryDetails.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["QueAns","props","rows","refContainer","useRef","cells","queObj","ansLength","answers","length","rowsColumns","queIndex","elementIndex","useState","activeIndex","setActiveIndex","isDragging","setIsDragging","useEffect","dragStart","dragEnd","_","info","droppedIndex","point","cellIndex","findIndex","cell","current","offsetLeft","offsetTop","offsetWidth","offsetHeight","parentElement","leftEdge","rightEdge","topEdge","bottomEdge","x","y","getActiveCellIndex","isCorrect","dataset","iscorrect","setTimeout","setQue","answerIndex","className","ref","Array","map","e","i","colNumber","cE","cIndex","Cell","index","onDragStart","onDragEnd","text","title","cellVariant","dragging","border","inactive","draggableVariant","scale","fromAnimatePoint","forwardRef","motion","div","id","variants","initial","opacity","animate","transition","duration","style","width","zIndex","dragElastic","layoutId","drag","CorrectAns","givenQueAnsObj","console","log","correctAns","find","item","isAnsCorrect","marginTop","StoryQuestions","storyId","match","params","parseInt","selectedStoryQuestions","contentId","sequence","isCompleted","questionId","filter","activeQueObj","queData","activeQueData","setActiveQueData","result","setResult","setIsCompleted","storyQuestions","setStoryQuestions","showCorrectAnsScreen","setShowCorrectAnsScreen","setGivenQueAnsObj","totalQue","AnimateSharedLayout","updatedQuestions","updatedResult","currentQue","que","ContentList","tagId","storyCategoryId","filteredContents","body","contents","categoryTitle","color","to","TagList","tagData","StoryCategoryList","categories","StoryDetails","storyData","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAKe,SAASA,EAAOC,GAE7B,IAaIC,EAbEC,EAAeC,iBAAO,MAOtBC,EAAQ,CANDD,iBAAO,MACPA,iBAAO,MACPA,iBAAO,MACPA,iBAAO,MACPA,iBAAO,OAIdE,EAASL,EAAMK,OAEfC,EAAYD,EAAOE,QAAQC,OAG7BC,EAAqB,GACrBC,EAAW,EAGG,IAAdJ,EACFG,EAAc,CAAC,EAAG,GACK,IAAdH,EACTG,EAAc,CAAC,EAAG,EAAG,GACE,IAAdH,IACTG,EAAc,CAAC,EAAG,EAAG,GACrBC,EAAW,GAGbT,EAAOQ,EAAYD,OAEnB,IAAIG,EAAe,EAEnB,EAAsCC,mBAASF,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRH,EAAeJ,KACd,CAACV,EAAMK,SAEV,IA4BMa,EAAY,WAChBF,GAAc,IAGVG,EAAU,SAACC,EAAQC,GACvBL,GAAc,GACd,IAAMM,EAlCmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MACtBC,EAAYpB,EAAMqB,WAAU,SAACC,GACjC,MAMIA,EAAKC,QALPC,EADF,EACEA,WACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,aAGIC,EAAqB9B,EAAayB,QAElCM,EAAWD,EAAcJ,WAAaA,EACtCM,EAAYF,EAAcJ,WAAaA,EAAaE,EACpDK,EAAUH,EAAcH,UAAYA,EACpCO,EAAaJ,EAAcH,UAAYA,EAAYE,EAEzD,OACER,EAAMc,GAAKJ,GACXV,EAAMc,GAAKH,GACXX,EAAMe,GAAKH,GACXZ,EAAMe,GAAKF,KAIf,OAAIZ,EAAY,EAAUX,EACnBW,EASce,CAAmBlB,GACxCP,EAAeQ,GAEf,IACMkB,EADapC,EAAMkB,GACKK,QAAgBc,QAAQC,UAQtDC,YAAW,WACT3C,EAAM4C,OAAO5C,EAAMK,OAAQmC,KAC1B,MAGDK,EAAc,EAElB,OACE,qBAAKC,UAAU,YAAYC,IAAK7C,EAAhC,SAEG,YAAI8C,MAAM/C,IAAOgD,KAAI,SAACC,EAAGC,GACxB,IAAIC,EAAY,EAEhB,OAAQ,qBAAaN,UAAW,QAA6B,IAAnBrC,EAAY0C,GAAW,yBAA2B,IAApF,SACL,YAAIH,MAAMvC,EAAY0C,KAAKF,KAAI,SAACI,EAAIC,GAGnC,OAFAF,IAEO,qBAAkBN,UAAW,UAAYM,EAAY,EAAI,WAAa,IAAtE,SACL,cAACG,EAAD,CACEC,MAAO7C,EAEPE,YAAaA,EACb4C,YAAavC,EACbwC,UAAWvC,EACXJ,WAAYA,EACZyB,UAAW9B,IAAaC,GAAeN,EAAOE,QAAQsC,GAAaL,UAEnEmB,KAAMjD,IAAaC,EAAeN,EAAOuD,MAAQvD,EAAOE,QAAQsC,KAAee,MAC/Eb,IAAK3C,EAAMO,MAVb,eAEeA,KAHA2C,OAJHH,QA2B1B,IAAMU,EAAc,CAClBC,SAAU,CACRC,OAAQ,sBAEVC,SAAU,CACRD,OAAQ,mBAINE,EAAmB,CACvBH,SAAU,CACRI,MAAO,IAETF,SAAU,CACRE,MAAO,IAILC,EAAmB,CACvB,CAAE9B,EAAG,SAAUC,EAAG,UAClB,CAAED,EAAG,QAASC,EAAG,UACjB,CAAED,EAAG,MAAOC,EAAG,OACf,CAAED,EAAG,SAAUC,EAAG,SAClB,CAAED,EAAG,QAASC,EAAG,UAGNiB,EAAOa,sBAClB,WAAmFrB,GAAc,IAA9FS,EAA6F,EAA7FA,MAAO3C,EAAsF,EAAtFA,YAAa4C,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,UAAW3C,EAAiD,EAAjDA,WAAYyB,EAAqC,EAArCA,UAAWmB,EAA0B,EAA1BA,KACpE,OACE,eAACU,EAAA,EAAOC,IAAR,CACExB,UAAW,eACXC,IAAKA,EACLwB,GAAIf,EACJgB,SAAUX,EAEVY,QAAS,CAAEpC,EAAG8B,EAAiBX,GAAOnB,EAAGC,EAAG6B,EAAiBX,GAAOlB,EAAGoC,QAAS,EAAGR,MAAO,IAC1FS,QAAS,CAAEtC,EAAG,MAAOC,EAAG,MAAOoC,QAAS,EAAGR,MAAO,EAAGH,OAAQhD,EAAa,qBAAuB,kBACjG6D,WAAY,CAAEC,SAAU,GACxB,iBAAgBrC,EAChBsC,MAAOtB,IAAU3C,EAAc,CAAEkE,MAAO,OAAQC,OAAQ,KAAQ,GAVlE,UAYGrB,EACA9C,IAAgB2C,GACf,cAACa,EAAA,EAAOC,IAAR,CACExB,UAAU,mBACV0B,SAAUP,EACVU,QAAS5D,EAAa,WAAa,WACnCkE,YAAa,EACbxB,YAAaA,EACbC,UAAWA,EACXwB,SAAS,OACTC,MAAI,EARN,SAUGxB,UCrKEyB,EAhBI,SAACpF,GAChB,IAAMqF,EAAiBrF,EAAMqF,eAC7BC,QAAQC,IAAIF,GACZ,IAAMG,EAAaH,EAAehF,OAAOE,QAAQkF,MAAK,SAACC,GAAe,OAA0B,IAAnBA,EAAKlD,aAAqBoB,MAEvG,OACI,gCACI,iDAAmB,iCAASyB,EAAeM,aAAc,UAAW,cAClEN,EAAeM,cAAgB,qBAAKb,MAAO,CAACc,UAAU,QAAvB,SACjC,oDAAsB,uBAAK,iCAASJ,aC0HjCK,EAjHQ,SAAC7F,GACtB,IAAI8F,EAAU,EACV9F,EAAM+F,MAAMC,OAAOzB,KACrBuB,EAAUG,SAASjG,EAAM+F,MAAMC,OAAOzB,KAGxC,IAgCM2B,EAhCU,CACd,CACE3B,GAAI,EAAGX,MAAO,gBAAiBuC,UAAW,EAAGC,SAAU,EAAGC,aAAa,EACvE9F,QAAS,CACP,CAAEgE,GAAI,EAAGX,MAAO,QAAS0C,WAAY,EAAG9D,WAAW,EAAO4D,SAAU,GACpE,CAAE7B,GAAI,EAAGX,MAAO,QAAS0C,WAAY,EAAG9D,WAAW,EAAO4D,SAAU,GACpE,CAAE7B,GAAI,EAAGX,MAAO,QAAS0C,WAAY,EAAG9D,WAAW,EAAM4D,SAAU,GACnE,CAAE7B,GAAI,EAAGX,MAAO,QAAS0C,WAAY,EAAG9D,WAAW,EAAO4D,SAAU,KAGxE,CACE7B,GAAI,EAAGX,MAAO,gBAAiBuC,UAAW,EAAGC,SAAU,EAAGC,aAAa,EACvE9F,QAAS,CACP,CAAEgE,GAAI,EAAGX,MAAO,QAAS0C,WAAY,EAAG9D,WAAW,GACnD,CAAE+B,GAAI,EAAGX,MAAO,QAAS0C,WAAY,EAAG9D,WAAW,KAGvD,CACE+B,GAAI,EAAGX,MAAO,gBAAiBuC,UAAW,EAAGC,SAAU,EAAGC,aAAa,EACvE9F,QAAS,CACP,CAAEgE,GAAI,EAAGX,MAAO,QAAS0C,WAAY,EAAG9D,WAAW,GACnD,CAAE+B,GAAI,EAAGX,MAAO,QAAS0C,WAAY,EAAG9D,WAAW,KAGvD,CAAE+B,GAAI,EAAGX,MAAO,gBAAiBuC,UAAW,EAAGE,aAAa,GAC5D,CAAE9B,GAAI,EAAGX,MAAO,gBAAiBuC,UAAW,EAAGE,aAAa,IAOvBE,QAAO,SAACb,GAC7C,OAAOA,EAAKS,YAAcL,KAGxBU,EAAyB,CAC3BjC,GAAI,GAGN,GAAI2B,EAAuB1F,OAAQ,CACjC,IAAMiG,EAAUP,EAAuB,GACvCM,EAAajC,GAAKkC,EAAQlC,GAC1BiC,EAAa5C,MAAQ6C,EAAQ7C,MAC7B4C,EAAaL,UAAYM,EAAQN,UACjCK,EAAajG,QAAUkG,EAAQlG,QAGjC,MAA0CK,mBAAS4F,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAA4B/F,mBAAS,GAArC,mBAAOgG,EAAP,KAAeC,EAAf,KACA,EAAsCjG,oBAAS,GAA/C,mBAAOyF,EAAP,KAAoBS,EAApB,KACA,EAA4ClG,mBAASsF,GAArD,mBAAOa,EAAP,KAAuBC,EAAvB,KACA,EAAwDpG,oBAAS,GAAjE,mBAAOqG,EAAP,KAA6BC,EAA7B,KACA,EAA4CtG,mBAAS,IAArD,mBAAOyE,EAAP,KAAuB8B,EAAvB,KAsCA,OACE,sBAAKrE,UAAU,YAAYgC,MAAO,CAAEc,UAAW,QAA/C,UAEIS,EAGwB,gCACxB,2DACA,2CAAcO,EAAd,WArEcQ,GAqEd,iBALgBH,GAAwB,cAACI,EAAA,EAAD,UACxC,cAACtH,EAAD,CAAQM,OAAQqG,EACd9D,OAzCgB,SAACvC,EAAasF,GACpC,IAAM2B,EAAmBP,EAAe9D,KAAI,SAACyC,GAAD,OAAUA,EAAKnB,KAAOlE,EAAOkE,GAAnB,2BAA6BmB,GAA7B,IAAmCW,aAAa,IAASX,KAG/G,GAFAsB,EAAkBM,GAEG,SAAjB3B,EAAyB,CAC3B,IAAI4B,EAAgBX,EA/BC,GAgCrBC,EAAUU,GACVjC,QAAQC,IAAI,gBAAiBgC,GAG/B,IAAMC,EAAkBF,EAAiB7B,MAAK,SAACC,GAC7C,OAA4B,IAArBA,EAAKW,eAUd,GAPAc,EAAkB,CAAE9G,OAAQA,EAAQsF,aAA+B,SAAjBA,IAClDuB,GAAwB,GAExBvE,YAAW,WACTuE,GAAwB,KACvB,MAECM,EAAY,CACd,IAAMC,EAAgB,CACpBlD,GAAIiD,EAAWjD,GACfX,MAAO4D,EAAW5D,MAClBuC,UAAWqB,EAAWrB,UACtB5F,QAASiH,EAAWjH,SAEtBoG,EAAiBc,QAEjB9E,YAAW,WACTmE,GAAe,KACd,WAeFG,GAAwB,cAAC,EAAD,CAAY5B,eAAgBA,Q,eC5H5C,SAASqC,EAAY1H,GAChC,IAAI2H,EAAQ,EACRC,EAAkB,EAClB5H,EAAM+F,MAAMC,OAAO2B,QACnBA,EAAQ1B,SAASjG,EAAM+F,MAAMC,OAAO2B,QAGpC3H,EAAM+F,MAAMC,OAAO4B,kBACnBA,EAAkB3B,SAASjG,EAAM+F,MAAMC,OAAO4B,kBAGlD,IAYMC,EAZc,CAChB,CAAEtD,GAAI,EAAGX,MAAO,uBAAwBkE,KAAM,mBAAoBH,MAAO,EAAGC,gBAAiB,GAC7F,CAAErD,GAAI,EAAGX,MAAO,uBAAwBkE,KAAM,mBAAoBH,MAAO,EAAGC,gBAAiB,GAC7F,CAAErD,GAAI,EAAGX,MAAO,uBAAwBkE,KAAM,mBAAoBH,MAAO,EAAGC,gBAAiB,IAS5DrB,QAAO,SAAAb,GAAI,OAAIA,EAAKiC,QAAUA,GAASjC,EAAKkC,kBAAoBA,KACrG,EAAgChH,mBAASiH,GAAzC,mBAAOE,EAAP,KAEMC,GAFN,KAP4B,CACxB,CAAEzD,GAAI,EAAGX,MAAO,UAChB,CAAEW,GAAI,EAAGX,MAAO,oBAChB,CAAEW,GAAI,EAAGX,MAAO,mBAMuB6B,MAAK,SAAAC,GAAI,OAAEA,EAAKnB,KAAMqD,KAAyBhE,OAC1F,OACI,qBAAKd,UAAU,YAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAASgC,MAAO,CAAEC,MAAO,OAAQa,UAAW,QAA5C,UACI,eAAC,IAAD,CAAeqC,MAAM,sCAArB,yBAAwED,EAAxE,OACA,eAAC,IAAD,WAEI,cAAC,IAAD,IAEA,cAAC,IAAD,CAAclF,UAAU,YAAYgC,MAAO,GAA3C,SAGKiD,EAASvH,OAASuH,EAAS9E,KAAI,SAACyC,EAAMlC,GACnC,OACI,cAAC,IAAD,CAEIyE,MAAOzE,EAAQ,IAAM,EAAI,UAAY,OAFzC,SAGI,cAAC,IAAD,CAAM0E,GAAI,UAAYxC,EAAKnB,GAA3B,SAAgCmB,EAAK9B,SAFhCJ,MAKZ,2D,YC9ClB,SAAS2E,IACpB,IAAMC,EAAU,CACZ,CAAE7D,GAAI,EAAGX,MAAO,SAChB,CAAEW,GAAI,EAAGX,MAAO,WAEpB,EAAwBhD,mBAASwH,GAAjC,6BAEA,OACI,qBAAKtF,UAAU,YAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAASgC,MAAO,CAAEC,MAAO,OAAQa,UAAW,QAA5C,UACI,cAAC,IAAD,CAAeqC,MAAM,sCAArB,yBACA,cAAC,IAAD,UAEI,cAAC,IAAD,UACI,cAAC,IAAD,CAAcnF,UAAU,YAAYgC,MAAO,GAA3C,SAGKsD,EAAQ5H,QAAU4H,EAAQnF,KAAI,SAACyC,EAAMlC,GAClC,OACI,cAAC,IAAD,CAEIyE,MAAOzE,EAAQ,IAAM,EAAI,UAAY,OAFzC,SAGI,cAAC,IAAD,CAAM0E,GAAI,kBAAoBxC,EAAKnB,GAAnC,SAAwCmB,EAAK9B,SAFxCJ,mBCtBlC,SAAS6E,EAAkBrI,GACtC,IAAI2H,EAAQ,EACR3H,EAAM+F,MAAMC,OAAO2B,QACnBA,EAAQ1B,SAASjG,EAAM+F,MAAMC,OAAO2B,QAGxC,IAMA,EAAoC/G,mBANR,CACxB,CAAE2D,GAAI,EAAGX,MAAO,UAChB,CAAEW,GAAI,EAAGX,MAAO,oBAChB,CAAEW,GAAI,EAAGX,MAAO,oBAGpB,mBAAO0E,EAAP,UAEA,OACI,qBAAKxF,UAAU,YAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAASgC,MAAO,CAAEC,MAAO,OAAQa,UAAW,QAA5C,UACI,cAAC,IAAD,CAAeqC,MAAM,sCAArB,8BACA,cAAC,IAAD,UAEI,cAAC,IAAD,UACI,cAAC,IAAD,CAAcnF,UAAU,YAAYgC,MAAO,GAA3C,SACKwD,EAAW9H,OAAS8H,EAAWrF,KAAI,SAACyC,EAAMlC,GACvC,OACI,cAAC,IAAD,CAEIyE,MAAOzE,EAAQ,IAAM,EAAI,UAAY,OAFzC,SAGI,cAAC,IAAD,CAAM0E,GAAI,YAAcP,EAAQ,IAAMjC,EAAKnB,GAA3C,SAAgDmB,EAAK9B,SAFhDJ,MAKZ,4DCjCrC,IAkCe+E,EAlCM,SAACvI,GAClB,IAAI8F,EAAU,EACV9F,EAAM+F,MAAMC,OAAOzB,KACnBuB,EAAUG,SAASjG,EAAM+F,MAAMC,OAAOzB,KAG1C,IAMMiE,EANc,CAChB,CAAEjE,GAAI,EAAGX,MAAO,uBAAwBkE,KAAM,mBAAoBH,MAAO,EAAGC,gBAAiB,GAC7F,CAAErD,GAAI,EAAGX,MAAO,uBAAwBkE,KAAM,mBAAoBH,MAAO,EAAGC,gBAAiB,GAC7F,CAAErD,GAAI,EAAGX,MAAO,uBAAwBkE,KAAM,mBAAoBH,MAAO,EAAGC,gBAAiB,IAGnEnC,MAAK,SAAAC,GAAI,OAAIA,EAAKnB,KAAOuB,KACvD,OACI,qBAAKhD,UAAU,YAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAASgC,MAAO,CAAEC,MAAO,OAAQa,UAAW,QAA5C,UACI,cAAC,IAAD,CAAeqC,MAAM,sCAArB,gBAA4DO,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAW5E,QACvE,eAAC,IAAD,WAEI,cAAC,IAAD,iBACK4E,QADL,IACKA,OADL,EACKA,EAAWV,OAGhB,cAAC,IAAD,CAAMI,GAAI,mBAAqBpC,EAA/B,mCCQT2C,MAxBf,WAEE,OACE,cAAC,IAAD,UACE,qBAAK3F,UAAU,MAAf,SAOE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,wBAAwBC,UAAWP,IACrD,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,mCAAmCC,UAAWlB,IAChE,cAAC,IAAD,CAAOiB,KAAK,aAAaC,UAAWL,IACpC,cAAC,IAAD,CAAOI,KAAK,sBAAsBC,UAAW/C,YCfxCgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c498b7f1.chunk.js","sourcesContent":["import React, { useRef, useState, forwardRef, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./StoryQuestions.css\";\r\n\r\nexport default function QueAns(props: any) {\r\n  //console.log('props.queObj', props.queObj);\r\n  const refContainer = useRef(null);\r\n  const ref0 = useRef(null);\r\n  const ref1 = useRef(null);\r\n  const ref2 = useRef(null);\r\n  const ref3 = useRef(null);\r\n  const ref4 = useRef(null);\r\n\r\n  const cells = [ref0, ref1, ref2, ref3, ref4];\r\n\r\n  const queObj = props.queObj;\r\n\r\n  const ansLength = queObj.answers.length;\r\n  // console.log(\"length\", ansLength);\r\n  let rows = 0;\r\n  let rowsColumns: any[] = [];\r\n  let queIndex = 0;\r\n\r\n  //column number for each rows\r\n  if (ansLength === 2) {\r\n    rowsColumns = [1, 2];\r\n  } else if (ansLength === 3) {\r\n    rowsColumns = [1, 2, 1];\r\n  } else if (ansLength === 4) {\r\n    rowsColumns = [2, 1, 2];\r\n    queIndex = 2;\r\n  }\r\n\r\n  rows = rowsColumns.length;\r\n\r\n  let elementIndex = 0;\r\n\r\n  const [activeIndex, setActiveIndex] = useState(queIndex);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setActiveIndex(queIndex);\r\n  }, [props.queObj]);\r\n\r\n  const getActiveCellIndex = ({ point }: any) => {\r\n    const cellIndex = cells.findIndex((cell: any) => {\r\n      const {\r\n        offsetLeft,\r\n        offsetTop,\r\n        offsetWidth,\r\n        offsetHeight,\r\n        //parentElement\r\n      } = cell.current;\r\n      const parentElement: any = refContainer.current;\r\n\r\n      const leftEdge = parentElement.offsetLeft + offsetLeft;\r\n      const rightEdge = parentElement.offsetLeft + offsetLeft + offsetWidth;\r\n      const topEdge = parentElement.offsetTop + offsetTop;\r\n      const bottomEdge = parentElement.offsetTop + offsetTop + offsetHeight;\r\n\r\n      return (\r\n        point.x >= leftEdge &&\r\n        point.x <= rightEdge &&\r\n        point.y >= topEdge &&\r\n        point.y <= bottomEdge\r\n      );\r\n    });\r\n\r\n    if (cellIndex < 0) return activeIndex;\r\n    return cellIndex;\r\n  };\r\n\r\n  const dragStart = () => {\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const dragEnd = (_: any, info: any) => {\r\n    setIsDragging(false);\r\n    const droppedIndex = getActiveCellIndex(info);\r\n    setActiveIndex(droppedIndex);\r\n    //console.log(droppedIndex);\r\n    const activeCell = cells[droppedIndex];\r\n    const isCorrect = (activeCell.current as any).dataset.iscorrect;\r\n    //console.log(isCorrect);\r\n    // if (isCorrect === 'true') {\r\n    //   alert(\"correct\");\r\n    // } else {\r\n    //   alert(\"wrong\");\r\n    // }\r\n    \r\n    setTimeout(() => {\r\n      props.setQue(props.queObj, isCorrect);\r\n    }, 500);\r\n  };\r\n\r\n  let answerIndex = 0;\r\n\r\n  return (\r\n    <div className=\"container\" ref={refContainer}>\r\n\r\n      {[...Array(rows)].map((e, i) => {\r\n        let colNumber = 0;\r\n\r\n        return (<div key={i} className={\"row \" + (rowsColumns[i] === 1 ? \"justify-content-center\" : \"\")}>\r\n          {[...Array(rowsColumns[i])].map((cE, cIndex) => {\r\n            colNumber++;\r\n\r\n            return <div key={cIndex} className={\"col-4 \" + (colNumber > 1 ? \"offset-4\" : \"\")}>\r\n              <Cell\r\n                index={elementIndex}\r\n                key={`cell-${elementIndex}`}\r\n                activeIndex={activeIndex}\r\n                onDragStart={dragStart}\r\n                onDragEnd={dragEnd}\r\n                isDragging={isDragging}\r\n                isCorrect={queIndex !== elementIndex ? queObj.answers[answerIndex].isCorrect : false}\r\n                //text={queIndex === elementIndex ? props.question : props.answers[answerIndex++]}\r\n                text={queIndex === elementIndex ? queObj.title : queObj.answers[answerIndex++].title}\r\n                ref={cells[elementIndex++]}\r\n              />\r\n            </div>;\r\n          }\r\n          )}\r\n        </div>);\r\n      })}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst cellVariant = {\r\n  dragging: {\r\n    border: \"2px dashed #008E95\"\r\n  },\r\n  inactive: {\r\n    border: \"2px solid #fff\"\r\n  }\r\n};\r\n\r\nconst draggableVariant = {\r\n  dragging: {\r\n    scale: .5\r\n  },\r\n  inactive: {\r\n    scale: 1\r\n  }\r\n};\r\n\r\nconst fromAnimatePoint = [\r\n  { x: \"-200px\", y: \"-200px\" },\r\n  { x: \"200px\", y: \"-200px\" },\r\n  { x: \"0px\", y: \"0px\" },\r\n  { x: \"-200px\", y: \"200px\" },\r\n  { x: \"200px\", y: \"200px\" },\r\n];\r\n\r\nexport const Cell = forwardRef(\r\n  ({ index, activeIndex, onDragStart, onDragEnd, isDragging, isCorrect, text }: any, ref: any) => {\r\n    return (\r\n      <motion.div\r\n        className={\"cell center \"}\r\n        ref={ref}\r\n        id={index}\r\n        variants={cellVariant}\r\n        //animate={isDragging ? \"dragging\" : \"inactive\"}\r\n        initial={{ x: fromAnimatePoint[index].x, y: fromAnimatePoint[index].y, opacity: 0, scale: .5 }}\r\n        animate={{ x: '0px', y: '0px', opacity: 1, scale: 1, border: isDragging ? \"2px dashed #008E95\" : \"2px solid #fff\" }}\r\n        transition={{ duration: 1 }}\r\n        data-iscorrect={isCorrect}\r\n        style={index === activeIndex ? { width: '100%', zIndex: 100 } : {}}\r\n      >\r\n        {text}\r\n        {activeIndex === index && (\r\n          <motion.div\r\n            className=\"draggable center\"\r\n            variants={draggableVariant}\r\n            animate={isDragging ? \"dragging\" : \"inactive\"}\r\n            dragElastic={1}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n            layoutId=\"drag\"\r\n            drag\r\n          >\r\n            {text}\r\n          </motion.div>\r\n        )}\r\n      </motion.div>\r\n    );\r\n\r\n  }\r\n);","import React, { Fragment } from \"react\";\r\n\r\n\r\nconst CorrectAns = (props: any) => {\r\n    const givenQueAnsObj = props.givenQueAnsObj;\r\n    console.log(givenQueAnsObj);    \r\n    const correctAns = givenQueAnsObj.queObj.answers.find((item: any) => {return item.isCorrect === true}).title;\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Your answer is <strong>{givenQueAnsObj.isAnsCorrect? 'correct': 'wrong'}</strong></h1>\r\n            {!givenQueAnsObj.isAnsCorrect && <div style={{marginTop:\"50px\"}}>\r\n            <h2>Correct answer is <br/><strong>{correctAns}</strong></h2>\r\n            </div>}\r\n            {/* <button type=\"button\" className=\"btn btn-primary\">Primary</button> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CorrectAns;","import React, { useRef, useState, forwardRef } from \"react\";\r\n// import ReactDOM from 'react-dom';\r\nimport { AnimateSharedLayout } from \"framer-motion\";\r\nimport QueAns from \"./QueAns\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CorrectAns from \"./CorrectAns\";\r\n\r\ninterface Question {\r\n  id: number,\r\n  title?: string,\r\n  contentId?: number,\r\n  answers?: Answer[]\r\n}\r\n\r\ninterface Answer {\r\n  id: number,\r\n  title: string,\r\n  questionId: number,\r\n  isCorrect: boolean\r\n}\r\n\r\nconst StoryQuestions = (props: any) => {\r\n  let storyId = 0;\r\n  if (props.match.params.id) {\r\n    storyId = parseInt(props.match.params.id);\r\n  }\r\n\r\n  const queList = [\r\n    {\r\n      id: 1, title: \"Sample que 1?\", contentId: 1, sequence: 1, isCompleted: false,\r\n      answers: [\r\n        { id: 1, title: \"Ans 1\", questionId: 1, isCorrect: false, sequence: 1 },\r\n        { id: 2, title: \"Ans 2\", questionId: 1, isCorrect: false, sequence: 2 },\r\n        { id: 3, title: \"Ans 3\", questionId: 1, isCorrect: true, sequence: 3 },\r\n        { id: 4, title: \"Ans 4\", questionId: 1, isCorrect: false, sequence: 4 },\r\n      ]\r\n    },\r\n    {\r\n      id: 2, title: \"Sample que 2?\", contentId: 1, sequence: 2, isCompleted: false,\r\n      answers: [\r\n        { id: 5, title: \"Ans 5\", questionId: 1, isCorrect: false },\r\n        { id: 6, title: \"Ans 6\", questionId: 1, isCorrect: true },\r\n      ]\r\n    },\r\n    {\r\n      id: 3, title: \"Sample que 3?\", contentId: 1, sequence: 3, isCompleted: false,\r\n      answers: [\r\n        { id: 7, title: \"Ans 7\", questionId: 1, isCorrect: false },\r\n        { id: 8, title: \"Ans 8\", questionId: 1, isCorrect: true },\r\n      ]\r\n    },\r\n    { id: 4, title: \"Sample que 4?\", contentId: 2, isCompleted: false, },\r\n    { id: 5, title: \"Sample que 5?\", contentId: 2, isCompleted: false, }\r\n  ];\r\n\r\n  const totalQue = 3;\r\n  const pointsForEachQue = 10;\r\n  const totalPoints = totalQue * pointsForEachQue;\r\n\r\n  const selectedStoryQuestions = queList.filter((item) => {\r\n    return item.contentId === storyId;\r\n  });\r\n\r\n  let activeQueObj: Question = {\r\n    id: 0,\r\n  };\r\n\r\n  if (selectedStoryQuestions.length) {\r\n    const queData = selectedStoryQuestions[0];\r\n    activeQueObj.id = queData.id;\r\n    activeQueObj.title = queData.title;\r\n    activeQueObj.contentId = queData.contentId;\r\n    activeQueObj.answers = queData.answers;\r\n  }\r\n\r\n  const [activeQueData, setActiveQueData] = useState(activeQueObj);\r\n  const [result, setResult] = useState(0);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n  const [storyQuestions, setStoryQuestions] = useState(selectedStoryQuestions);\r\n  const [showCorrectAnsScreen, setShowCorrectAnsScreen] = useState(false);\r\n  const [givenQueAnsObj, setGivenQueAnsObj] = useState({});\r\n\r\n  const handleQueChange = (queObj: any, isAnsCorrect: string) => {\r\n    const updatedQuestions = storyQuestions.map((item) => item.id === queObj.id ? { ...item, isCompleted: true } : item)\r\n    setStoryQuestions(updatedQuestions);\r\n\r\n    if (isAnsCorrect === \"true\") {\r\n      let updatedResult = result + pointsForEachQue;\r\n      setResult(updatedResult);\r\n      console.log(\"updatedResult\", updatedResult);\r\n    }\r\n\r\n    const currentQue: any = updatedQuestions.find((item) => {\r\n      return item.isCompleted === false;\r\n    });\r\n\r\n    setGivenQueAnsObj({ queObj: queObj, isAnsCorrect: isAnsCorrect === \"true\" });\r\n    setShowCorrectAnsScreen(true);\r\n\r\n    setTimeout(() => {\r\n      setShowCorrectAnsScreen(false);\r\n    }, 1500);\r\n\r\n    if (currentQue) {\r\n      const que: Question = {\r\n        id: currentQue.id,\r\n        title: currentQue.title,\r\n        contentId: currentQue.contentId,\r\n        answers: currentQue.answers\r\n      };\r\n      setActiveQueData(que);\r\n    } else {\r\n      setTimeout(() => {\r\n        setIsCompleted(true);\r\n      }, 1500);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: \"50px\" }}>\r\n\r\n      {!isCompleted ? (!showCorrectAnsScreen && <AnimateSharedLayout>\r\n        <QueAns queObj={activeQueData}\r\n          setQue={handleQueChange} />\r\n      </AnimateSharedLayout>) : <div>\r\n        <h2>You have completed Part 1</h2>\r\n        <h1>Result : {result} out of {totalPoints} Points</h1>\r\n      </div>}\r\n\r\n      {showCorrectAnsScreen && <CorrectAns givenQueAnsObj={givenQueAnsObj} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryQuestions;","import React, { useRef, useState, forwardRef } from \"react\";\r\nimport { MDBListGroup, MDBListGroupItem, MDBContainer, MDBCard, MDBCardBody, MDBCardHeader, MDBCardText } from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function ContentList(props: any) {\r\n    let tagId = 0;\r\n    let storyCategoryId = 0;\r\n    if (props.match.params.tagId) {\r\n        tagId = parseInt(props.match.params.tagId);\r\n    }\r\n\r\n    if (props.match.params.storyCategoryId) {\r\n        storyCategoryId = parseInt(props.match.params.storyCategoryId);\r\n    }\r\n\r\n    const contentData = [\r\n        { id: 1, title: \"Sample story title 1\", body: \"Sample details 1\", tagId: 1, storyCategoryId: 1 },\r\n        { id: 2, title: \"Sample story title 2\", body: \"Sample details 2\", tagId: 1, storyCategoryId: 1 },\r\n        { id: 3, title: \"Sample story title 3\", body: \"Sample details 3\", tagId: 1, storyCategoryId: 1 },\r\n    ];\r\n\r\n    const storyCategoriesData = [\r\n        { id: 1, title: \"Upwork\", },\r\n        { id: 2, title: \"Software Company\", },\r\n        { id: 3, title: \"Digital Agency\", },\r\n    ];\r\n\r\n    const filteredContents = contentData.filter(item => item.tagId === tagId && item.storyCategoryId === storyCategoryId);\r\n    const [contents, setContents] = useState(filteredContents);\r\n\r\n    const categoryTitle = (storyCategoriesData.find(item=>item.id ===storyCategoryId) as any).title;\r\n    return (\r\n        <div className=\"container\">\r\n            <MDBContainer>\r\n                <MDBCard style={{ width: \"100%\", marginTop: \"1rem\" }}>\r\n                    <MDBCardHeader color=\"primary-color deep-orange lighten-1\">Story List ({categoryTitle})</MDBCardHeader>\r\n                    <MDBCardBody>\r\n                        {/* <MDBCardTitle>Special title treatment</MDBCardTitle> */}\r\n                        <MDBCardText>\r\n                        </MDBCardText>\r\n                        <MDBListGroup className=\"my-4 mx-4\" style={{}}>\r\n                            {/* <MDBListGroupItem color=\"primary\">Morbi leo risus</MDBListGroupItem>\r\n                    <MDBListGroupItem color=\"info\">Vestibulum at eros</MDBListGroupItem> */}\r\n                            {contents.length ? contents.map((item, index) => {\r\n                                return (\r\n                                    <MDBListGroupItem\r\n                                        key={index}\r\n                                        color={index % 2 !== 0 ? \"primary\" : \"info\"}>\r\n                                        <Link to={\"/story/\" + item.id}>{item.title}</Link>\r\n                                    </MDBListGroupItem>\r\n                                );\r\n                            }) : <h1>Empty content</h1>}\r\n                        </MDBListGroup>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n\r\n            </MDBContainer>\r\n        </div>\r\n    );\r\n}","import React, { useRef, useState, forwardRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBBtn, MDBContainer, MDBListGroup, MDBListGroupItem } from \"mdbreact\";\r\n\r\n\r\n\r\nexport default function TagList() {\r\n    const tagData = [\r\n        { id: 1, title: \"Story\", },\r\n        { id: 2, title: \"Lesson\", },\r\n    ];\r\n    const [tags, setTags] = useState(tagData);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <MDBContainer>\r\n                <MDBCard style={{ width: \"100%\", marginTop: \"1rem\" }}>\r\n                    <MDBCardHeader color=\"primary-color deep-orange lighten-1\">Study Types</MDBCardHeader>\r\n                    <MDBCardBody>\r\n                        {/* <MDBCardTitle>Special title treatment</MDBCardTitle> */}\r\n                        <MDBCardText>\r\n                            <MDBListGroup className=\"my-4 mx-4\" style={{}}>\r\n                                {/* <MDBListGroupItem color=\"primary\">Morbi leo risus</MDBListGroupItem>\r\n                    <MDBListGroupItem color=\"info\">Vestibulum at eros</MDBListGroupItem> */}\r\n                                {tagData.length && tagData.map((item, index) => {\r\n                                    return (\r\n                                        <MDBListGroupItem\r\n                                            key={index}\r\n                                            color={index % 2 !== 0 ? \"primary\" : \"info\"}>\r\n                                            <Link to={\"/storyCategory/\" + item.id}>{item.title}</Link>\r\n                                        </MDBListGroupItem>\r\n                                    );\r\n                                })}\r\n                            </MDBListGroup>\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </MDBContainer>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useRef, useState, forwardRef } from \"react\";\r\nimport { MDBListGroup, MDBListGroupItem, MDBContainer, MDBCard, MDBCardBody, MDBCardHeader, MDBCardText } from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function StoryCategoryList(props: any) {\r\n    let tagId = 0;\r\n    if (props.match.params.tagId) {\r\n        tagId = parseInt(props.match.params.tagId);\r\n    }\r\n\r\n    const storyCategoriesData = [\r\n        { id: 1, title: \"Upwork\", },\r\n        { id: 2, title: \"Software Company\", },\r\n        { id: 3, title: \"Digital Agency\", },\r\n    ];\r\n\r\n    const [categories, setCategories] = useState(storyCategoriesData);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <MDBContainer>\r\n                <MDBCard style={{ width: \"100%\", marginTop: \"1rem\" }}>\r\n                    <MDBCardHeader color=\"primary-color deep-orange lighten-1\">Story Categories</MDBCardHeader>\r\n                    <MDBCardBody>\r\n                        {/* <MDBCardTitle>Special title treatment</MDBCardTitle> */}\r\n                        <MDBCardText>\r\n                            <MDBListGroup className=\"my-4 mx-4\" style={{}}>\r\n                                {categories.length ? categories.map((item, index) => {\r\n                                    return (\r\n                                        <MDBListGroupItem\r\n                                            key={index}\r\n                                            color={index % 2 !== 0 ? \"primary\" : \"info\"}>\r\n                                            <Link to={\"/content/\" + tagId + \"/\" + item.id}>{item.title}</Link>\r\n                                        </MDBListGroupItem>\r\n                                    );\r\n                                }) : <h1>Empty content</h1>}\r\n                            </MDBListGroup>\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </MDBContainer>\r\n\r\n        </div>\r\n    );\r\n}","import { MDBContainer, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem } from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StoryDetails = (props: any) => {\r\n    let storyId = 0;\r\n    if (props.match.params.id) {\r\n        storyId = parseInt(props.match.params.id);\r\n    }\r\n\r\n    const contentData = [\r\n        { id: 1, title: \"Sample story title 1\", body: \"Sample details 1\", tagId: 1, storyCategoryId: 1 },\r\n        { id: 2, title: \"Sample story title 2\", body: \"Sample details 2\", tagId: 1, storyCategoryId: 1 },\r\n        { id: 3, title: \"Sample story title 3\", body: \"Sample details 3\", tagId: 1, storyCategoryId: 1 },\r\n    ];\r\n\r\n    const storyData = contentData.find(item => item.id === storyId);\r\n    return (\r\n        <div className=\"container\">\r\n            <MDBContainer>\r\n                <MDBCard style={{ width: \"100%\", marginTop: \"1rem\" }}>\r\n                    <MDBCardHeader color=\"primary-color deep-orange lighten-1\">{storyData?.title}</MDBCardHeader>\r\n                    <MDBCardBody>\r\n                        {/* <MDBCardTitle>Special title treatment</MDBCardTitle> */}\r\n                        <MDBCardText>\r\n                            {storyData?.body}\r\n                        </MDBCardText>\r\n                        {/* <button type=\"button\" className=\"btn btn-primary\"></button> */}\r\n                        <Link to={\"/storyQuestions/\" + storyId}>Start Exam</Link>\r\n\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n\r\n            </MDBContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryDetails;","import * as React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n// import React, { useEffect, useState } from \"react\";\r\nimport './App.css';\r\nimport StoryQuestions from \"./questions/StoryQuestions\";\r\nimport ContentList from \"./contents/ContentList\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport TagList from \"./tags/TagList\";\r\nimport StoryCategoryList from \"./stories/StoryCategoryList\";\r\nimport StoryDetails from \"./stories/StoryDetails\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />        \r\n      </header> */}\r\n        {/* <StoryList />\r\n        <DragDropPattern1 /> */}\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={TagList} />\r\n          <Route exact path=\"/storyCategory/:tagId\" component={StoryCategoryList} />\r\n          <Route exact path=\"/content/:tagId/:storyCategoryId\" component={ContentList} />\r\n          <Route path=\"/story/:id\" component={StoryDetails} />\r\n          <Route path=\"/storyQuestions/:id\" component={StoryQuestions} />\r\n        </Switch>\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}